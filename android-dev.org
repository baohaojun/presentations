#+Latex: \begin{CJK*}{UTF8}{simsun}
#+Latex: \CJKtilde


#+TITLE:     Android网络和数据
#+AUTHOR:    包昊军（钧钩）
#+EMAIL:     baohaojun@gmail.com
#+DATE:      2014-01-20
#+LATEX_CLASS_OPTIONS: [presentation,CJKbookmarks]
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:2 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:

#+BEAMER_THEME: Berkeley
#+BEAMER_COLOR_THEME: lily

* 回顾

** 上节内容
*** ListView & Adapter
*** 实现banner和列表视图List的同时滑动
*** 删除列表中一行
*** 双列列表

** 往期回顾
*** Android系统和环境
*** Activity等四大组件
*** ListView
* 工具
** 粗野的Beagrep
*** Grep 9G Android代码，只需0.23秒
*** 阅读源代码的利器之一
** 精细的grep-gtags
*** 综合了ctags (exuberant）、gtags、cscope
*** 可以与beagrep组合使用，获取函数调用位置
*** 可以定位png文件，xml元素，这些也是源代码:-)
** 搞笑的Ajoke
*** 主要在使用grep-gtags和一些自制脚本
*** 可以打印继承树
- 目前不可以打印倒继承树
*** 可以补齐函数
*** 可以自动import
*** 可以重载函数
*** 将来会支持Exception
** 可怕的skeleton-complete.el
*** 打几个字符（骨架），补全整字、整句、整行、整段（血肉）
*** 其实firefox也有类似的功能
*** Java IDE神器 IntelliJ IDEA 也有类似的功能

** yasnippet
*** 另一个非常强大的补齐展开工具
*** 用起来更正式，需要提前准备好展开脚本

* 网络
** 网络编程介绍
*** Socket（套接字）
- Tcp，Udp，Unix Domain
- 我的输入法编程

*** HTTP通讯
- HttpURLConnection （Android原生，性能更好）
- DefaultHttpClient （apache代码，早期bug较少）

*** WebView
- 频繁变化，或轻交互


** 小练习
*** 获取一段JSON数据 (MainActivity1)
- AllIn4Demo代码位置
  [[http://10.125.206.165/allin4.zip]]
*** 会出错
    :PROPERTIES:
    :BEAMER_act: <2->
    :END:
** UI主线程和联网线程
*** Android编程中，需要牢记：

  + 要区分开UI主线程和工作线程

*** Android网络操作必须用工作线程                                               :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :BEAMER_env: block
    :END:
*** 会阻塞，导致无响应                                                          :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :BEAMER_act: <2->
    :BEAMER_env: block
    :END:
*** break the line                                                              :B_ignoreheading:
    :PROPERTIES:
    :BEAMER_env: ignoreheading
    :END:
*** 工作线程不允许操作UI元素                                                    :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :BEAMER_env: block
    :END:
*** 操作UI元素的API都是线程不安全的，只能在一个线程中调用以保证线程安全         :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :BEAMER_act: <3->
    :BEAMER_env: block
    :END:

** 工作线程与UI主线程间通信
*** runOnUiThread
- 工作线程中调用操作UI元素的Callback函数
*** Handler
- 工作线程发送消息，UI线程处理消息
- 当然UI线程也可以给自己发消息

*** AsyncTask
- 更好的封装，有准备、运行（进度）、结果三个阶段

** runOnUiThread
    :PROPERTIES:
    :END:

#+BEGIN_SRC java
// In UI thread:
new Thread(new Runnable() {
   @Override
   public void run() {
     // do some work in working thread
     runOnUiThread(new Runnable() {
       @Override
       public void run() {
         // manipulate the UI elements
         // within runOnUiThread
         mTextView.setText(mGetJsonHelper.result);
       }
     });
   }
}).start();
#+END_SRC

** Handler

#+BEGIN_SRC java
Handler mHandler = new Handler() {
  public void handleMessage(Message msg) {
    switch (msg.what) { ... }
    super.handleMessage(msg);
  }
};
new Thread(new Runnable() {
   public void run() {
     // do something in working thread
     Message message = new Message();
     message.what = 1;
     message.setData(Bundle b);
     mHandler.sendMessage(message);
   }
}).start();
#+END_SRC

** AsyncTask
#+BEGIN_SRC java
private class MyAsyncTask
 extends AsyncTask<Param, Progress, Result> {
  protected void onPreExecute()
  {...}
  protected Result doInBackground(Param... args)
  { publishProgress(...); return ""; }
  protected void onProgressUpdate(Progress... args)
  {...}
  protected void onPostExecute(Result parsedText) {
    mTitleBar.startAnimation(mSlideOut);
  }
}
new MyAsyncTask().execute(...);
#+END_SRC
** 小练习
*** 用 runOnUiThread 实现线程间交互 (MainActivity2)
*** 用 Handler 实现线程间交互 (MainActivity3)
*** 用 AsyncTask 实现线程间交互 (MainActivity4)

** WebView应用

*** 微博、微信客户端等的网页（网络应用）
*** CrossDict的实现（离线网页应用）

* 数据
** Android文件系统介绍

*** ADB的使用
*** Android文件系统目录结构
*** App目录结构

** 小练习
- 用ADB安装Apk
- 用ADB卸载Apk
- 查看App的目录

** Android系统数据存取
*** SharedPreferences
#+BEGIN_SRC java
SharedPreferences spf =
  getSharedPreferences("allin4", 0);
spf.getInt(String key, int defValue);
spf.edit().putFloat(String key, float value).commit();
#+END_SRC

*** File：私有文件，sdcard上的文件，只读的asset资源文件
#+BEGIN_SRC java
openFileInput(path); openFileOutput(path);
Environment.getExternalStoragePublicDirectory(path);
AssetManager am = getAssets(); am.open(path);
#+END_SRC
*** Sqlite 单进程
*** ContentProvider 多进程（联系人数据）
** 小练习

*** SharedPreferences
- 每进一次Activity，把记数加1，并显示
- 查看 SharedPreferences 在文件系统中保存的位置

** 数据传递、共享
*** Intent传递数据
#+BEGIN_SRC java
Intent intent = new Intent();
intent.setClass(thisActivity,
  thatActivity.class);
intent.putExtra(key, value);
startActivity(intent);
#+END_SRC

*** Intent获取数据
#+BEGIN_SRC java
Intent intent = getIntent();
value = intent.getStringExtra(key);
#+END_SRC
** 数据传递、共享（续）
*** startActivityForResult
#+BEGIN_SRC java
Intent intent = new Intent(thisActivity,
       thatActivity.class);
startActivityForResult(intent, GET_CODE);

setResult(RESULT_OK,
    (new Intent()).setAction("Corky!"));
#+END_SRC
*** onActivityResult
#+BEGIN_SRC java
protected void onActivityResult(
 int requestCode,
 int resultCode,
 Intent data) {
  if (requestCode == GET_CODE) {...}
}
#+END_SRC
** 数据传递、共享（续）
*** Singleton、Application
*** 数据存取也是一种IPC

** 小练习
- 用Intent传递数据
- 用startActivityForResult获取结果

* 总结
** 查看文档的方法
*** bhj-help-java 查看java API
*** bhj-help-it 查看android:layout_toLeftOf android:layout_weight
*** 上beagrep暴力搜索
** 下载整个Android源代码
#+BEGIN_SRC sh
repo_url=$(
    echo -n https://github.com/baohaojun
    echo -n system-config/raw/master/bin/repo
)
wget $repo_url -o ~/system-config/bin/repo

mani_url=$(
    echo -n https://android.googlesource.com/
    echo -n platform/manifest
)
repo init -u $mani_url -b android-4.4_r1
repo sync
#+END_SRC
** ApiDemos
   #+caption: OpenGL画图
   #+label: opengl-img
   #+ATTR_LATEX: :width .5\linewidth
   [[~/system-config/doc/presentations/opengl.png]]

** 多读，多写！
*** 写出有趣的软件，发布到Google Play上
#+Latex: \end{CJK*}

# Local Variables: #
# eval: (org-beamer-mode) #
# eval: (mmm-mode 1) #
# End: #
